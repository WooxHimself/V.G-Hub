local Config = {
    WindowName = "V.G Hub",
	Color = Color3.fromRGB(255,128,64),
	Keybind = Enum.KeyCode.RightControl
}
repeat wait() until game:IsLoaded() wait()
game:GetService("Players").LocalPlayer.Idled:connect(function()
game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

game:GetService("Players").LocalPlayer.PlayerGui.NodeGui.BoostFrame.ChildAdded:Connect(function(v)
if v.Name == "Default" and v:FindFirstChild("ClickLabel") then
wait()
firesignal(v.ClickButton.MouseButton1Down)

v:Destroy()
end
end)
pcall(function()

game:GetService("ReplicatedStorage").Remotes.SpinWheelRemote:InvokeServer()
game:GetService("ReplicatedStorage").Remotes.ClaimWheelRemote:FireServer()

game.StarterGui:SetCoreGuiEnabled(1, true)
game.StarterGui:SetCoreGuiEnabled(2, true)
game.StarterGui:SetCoreGuiEnabled(3, true)


end)
function Invis()
local Clone = game.Players.LocalPlayer.Character.LowerTorso.Root:Clone()
game.Players.LocalPlayer.Character.LowerTorso.Root:remove()
Clone.Parent = game.Players.LocalPlayer.Character.LowerTorso
end 
local Feshy = Instance.new("ScreenGui")
local CurrentFish = Instance.new("TextLabel")

--Properties:

Feshy.Name = "Feshy"
Feshy.Parent = game.CoreGui
Feshy.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

CurrentFish.Name = "CurrentFish"
CurrentFish.Parent = Feshy
CurrentFish.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
CurrentFish.BackgroundTransparency = 1.000
CurrentFish.Position = UDim2.new(0, 0, 0.339622647, 0)
CurrentFish.Size = UDim2.new(0, 112, 0, 28)
CurrentFish.Font = Enum.Font.SourceSans
CurrentFish.TextColor3 = Color3.fromRGB(255, 255, 255)
CurrentFish.TextScaled = true
CurrentFish.TextSize = 14.000
CurrentFish.TextWrapped = true

spawn(function()
local script = Instance.new('LocalScript', CurrentFish)
while wait() do
CurrentFish.Text = game:GetService("Players").LocalPlayer.Settings.CurrentFish.Value 
end end)



function getUserRole(user, group)
return user:GetRoleInGroup(group)
end
game.Players.PlayerAdded:Connect(function(player)
if getUserRole(player, 2919215) == "📝Tester" or getUserRole(player, 2919215) == "❤️Contributor"  
or  getUserRole(player, 2919215) == "📣Staff" or getUserRole(player, 2919215) == "💎Administrator" or getUserRole(player, 2919215) == "🔧Other Developer" or
getUserRole(player, 2919215) == "🛠️Developer" or getUserRole(player, 2919215) == "👑Co-Owner" or  getUserRole(player, 2919215) == "👑Owner" 
then
fuckyou() 
end
end)
function fuckyou()
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport()
end
local Meta = getrawmetatable(game)
local NewIndex = Meta.__newindex
setreadonly(Meta, false)
Meta.__newindex = newcclosure(function(t, k, ...)
if not checkcaller() and (k == "WalkSpeed" or k == "JumpPower") then
return
end
NewIndex(t, k, ...)
end)
setreadonly(Meta, true)
foods ={}
for i,v in pairs(game:GetService("ReplicatedStorage").Storage.Items.Items.Food:GetDescendants()) do
if v.ClassName == "Tool" then
table.insert(foods,v.Name )
end end 
list ={}
for i,v in pairs(game:GetService("ReplicatedStorage").Storage.Items.Items.Food:GetDescendants()) do
if v.ClassName == "Tool" then
table.insert(list,v.Name)
end end 


game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 30
local deku1 = {"SolsticeFlares","SolsticeBoxes"}
local deku ={"Food","Magic","Resources"}
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/im-retarded-3"))()
local Window = Library:CreateWindow(Config, game:GetService("CoreGui"))

local Tab1 = Window:CreateTab("Dragon Adventures")
local Tab2 = Window:CreateTab("UI Settings")

local Section1 = Tab1:CreateSection("AutoFarms")
local SectionA = Tab1:CreateSection("Misc")
local Section3 = Tab2:CreateSection("Menu")
local Section4 = Tab2:CreateSection("Background")

if game.PlaceId == 3475397644 then

for i,v in pairs(game:GetService("Workspace").Interactions.Plots.Portals:GetChildren()) do
if v.Name == "Portal" and v:FindFirstChild("ActivePortal") then
if v.ActivePortal.DefaultPortalGui.PlayerLabel.Text == game:GetService("Players").LocalPlayer.PlayerGui.WorkspaceGui[game.Players.LocalPlayer.Name.."_DisplayGui"].ContainerFrame.NameLabel.Text then
firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.TeleportPart, 0) 
end end end 

repeat wait() until game:GetService("Workspace").Interactions.Plots.Plots[game.Players.LocalPlayer.Name.."_Plot"]:WaitForChild("Base")


ss1={}
for i,v in pairs(game:GetService("ReplicatedStorage").Storage.Items.Items.Eggs:GetDescendants()) do
if v.ClassName == "Model"  then
table.insert(ss1,v.Name)
end end 



local Toggle1 = Section1:CreateToggle("Money Method", nil, function(State)
red = State
while wait() do
if red then
spawn(function()
for i,v in pairs(game:GetService("Workspace").Interactions.Plots.Plots[game.Players.LocalPlayer.Name.."_Plot"].Base.Buildings:GetDescendants()) do
if v.ClassName == "Model" and v:FindFirstChild("HarvestRemote") then
v.HarvestRemote:InvokeServer()
end end end)
spawn(function()

game:GetService("ReplicatedStorage").Remotes.SellItemRemote:FireServer({["Amount"] = 1,["ItemName"] = "Apple"})
end)
end
end

end)
local Button1 = SectionA:CreateButton("PoppyEvent", function()

for i,v in pairs(game:GetService("Workspace").Interactions.PoppyEvent:GetDescendants()) do
if v.ClassName == "Model" and v:FindFirstChild("Platform")  then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Interactions.PoppyEvent[v.Name].Platform.Part.CFrame
wait(1)
game:GetService("ReplicatedStorage").Remotes.PlayMusicRemote:FireServer(v.Name) wait(1)
end end
end)


local Toggle1 = Section1:CreateToggle("Auto Incubate Eggs", nil, function(State) 
Incubate = State
while Incubate do wait()


for i,v in pairs(game:GetService("Workspace").Interactions.Plots.Plots[game.Players.LocalPlayer.Name.."_Plot"].Base.Buildings:GetDescendants()) do
if v.Name == "Incubator" then 
v.IncubateRemote:InvokeServer(ss1)
v.ClaimRemote:InvokeServer()
end
end

end
end)
local Dropdown1 = Section1:CreateDropdown("Select Egg")
Dropdown1:AddToolTip("Select Egg To Incubate")
for i,v in next, ss1 do
Dropdown1:AddOption(v, function(String)
ss1 = String
end)
end

local Button1 = Section1:CreateButton("Clear Base", function()
game:GetService("Workspace").Interactions.Plots.Plots[game.Players.LocalPlayer.Name.."_Plot"].DeleteAllRemote:FireServer()
end)
local Toggle1 = Section1:CreateToggle("Merchant Auto Sell", nil, function(State)
sex55 = State
while sex55 do wait()

end end) 
Button1:AddToolTip("Sells Items needed for Merchant")
local Toggle1 = Section1:CreateToggle("Auto Sell", nil, function(State) 
sex = State
while sex do wait()
for i,v in pairs(game:GetService("ReplicatedStorage").Storage.Items.Items.Food:GetDescendants()) do
if v.ClassName == "Tool" then
game:GetService("ReplicatedStorage").Remotes.SellItemRemote:FireServer({["Amount"] = 1,["ItemName"] = v.Name})
end end 
end end)



local Toggle1 = Section1:CreateToggle("Alchemy AutoFarm", nil, function(State) 
doo = State
while wait() and doo do
for i,v in pairs(game:GetService("Workspace").Interactions.Plots.Plots[game.Players.LocalPlayer.Name.."_Plot"].Base.Buildings:GetDescendants()) do
if v.ClassName == "Model" and v:FindFirstChild("HarvestRemote") then
v.HarvestRemote:InvokeServer()
end end 
game:GetService("ReplicatedStorage").Remotes.RecycleResourceRemote:InvokeServer({["Apple"] = 1})

end
end)
local Toggle1 = Section1:CreateToggle("Salvage Apple Plants", nil, function(State)
nigj=State
while nigj do wait()
game:GetService("Players").LocalPlayer.Remote:FireServer("SalvageBuilding",{"Plant_Apple",1})
end end)


local Toggle1 = Section1:CreateToggle("Automatic Apple Plants", nil, function(State)
nij=State    
while nij do wait()
if nij then
for i,v in pairs(game:GetService("Workspace").Interactions.Plots.Plots[game.Players.LocalPlayer.Name.."_Plot"].Base.Buildings:GetDescendants()) do
if v.Name == "Plant_Apple" and v.ID then
game:GetService("Workspace").Plots.Plots[game.Players.LocalPlayer.Name.."_Plot"].PlaceBuildingRemote:InvokeServer({["CFrame"] = CFrame.new(Vector3.new(-1955, 3.8000018596649, 4955), Vector3.new(4.3711388286738e-08, -6.9938096203259e-07, 1)),["Index"] = v.ID.Value,["Name"] = "Plant_Apple"})
end end 
end
end    
end)
end



local Toggle1 = Section1:CreateToggle("Autocollect", nil, function(State)
yes33 = State

game:GetService("RunService").Stepped:connect(
    function()
        if yes33 then
            pcall(
                function()
                    game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
                end
            )
        end
    end
)

while yes33 do
    wait()
    pcall(
        function()
            for i, v in pairs(game:GetService("Workspace").Interactions.Nodes.Harvest[deku]:GetDescendants()) do
                if v:IsA("Model") and v:FindFirstChildOfClass("MeshPart") then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        v:FindFirstChildOfClass("MeshPart").CFrame * CFrame.new(40, -3, 0)
                    wait(1)
                    game.Players.LocalPlayer.Character.Humanoid:MoveTo(
                        v:FindFirstChildOfClass("MeshPart").CFrame.Position
                    )
                    wait(3)
                    if not yes33 then
                        break
                    end
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, uwu)

                    wait(19)
                end
            end
        end
    )
end

end)


local Dropdown1 = Section1:CreateDropdown("Select Collection")
Dropdown1:AddToolTip("Select Collection")
for i,v in next, deku do
Dropdown1:AddOption(v, function(String)
deku = String
end)
end
local Toggle1 = Section1:CreateToggle("Auto Egg", nil, function(State) 
egg = State
while egg do
    wait(1)
    pcall(
        function()
            for i, v in pairs(game:GetService("Workspace").Interactions.Nodes.Harvest.Eggs.ActiveNodes:GetDescendants()) do
                if v:IsA("MeshPart") then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(40, -3, 0)
                    wait(1)
                    game.Players.LocalPlayer.Character.Humanoid:MoveTo(v.CFrame.Position)
                    wait(3)
                    if not egg then
                        break
                    end
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, uwu)
                    v.Harvested.Value = true
                    v.Harvested.Value = false
                   
                end
            end
        end
    )
     wait(15)
end
game:GetService("Players").LocalPlayer.PlayerGui.NodeGui.BoostFrame.ChildAdded:Connect(
    function(v)
        if egg then
            if v.Name == "Default" and v:FindFirstChild("ClickLabel") then
                wait()
                firesignal(v.ClickButton.MouseButton1Down)
                v:Destroy()
            end
        end
    end
)

end)
Toggle1:AddToolTip("Teleports to Eggs")

local Player = game.Players.LocalPlayer
local Pointer = Player.PlayerGui.FishingGui.ContainerFrame.ReelingFrame.BarLabel.InnerLabel.PointerLabel
local SafeBar = Player.PlayerGui.FishingGui.ContainerFrame.ReelingFrame.BarLabel.InnerLabel.SafeBarLabel
local Toggle1 = Section1:CreateToggle("Auto Fishing", nil, function(State)
Fesh = State

if Player.PlayerGui.FishingGui.ContainerFrame.Visible then
    if not Player.Character:FindFirstChild("FishingRod") and not Player.Backpack:FindFirstChild("FishingRod") then
        wait(.1)
        game:GetService("VirtualInputManager"):SendKeyEvent(true, "G", false, uwu)
    elseif Player.Backpack:FindFirstChild("FishingRod") then
        game:GetService("VirtualInputManager"):SendKeyEvent(true, "G", false, uwu)
        game.StarterGui:SetCore(
            "SendNotification",
            {
                Title = "Auto Fishing",
                Text = "You have to keep the game in focus otherwise it dosent work she added a stuiped check for VirtualInputManager"
            }
        )
    end
else
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "Auto Fishing",
            Text = "Sorry but for this to work i kinda need you to go to where you fish sorry not sorry"
        }
    )
end

if not Fesh then
    Player.PlayerGui.FishingGui.ContainerFrame.ButtonsFrame.ReelButton.Size = UDim2.new(1, 0, 1, 0)
end
spawn(
    function()
        while Fesh do
            wait()
            if Player.PlayerGui.FishingGui.ContainerFrame.Visible then
                pcall(
                    function()
                        if
                            not Player.Character:FindFirstChild("FishingRod") and
                                not Player.Backpack:FindFirstChild("FishingRod")
                         then
                            wait(.1)
                            game:GetService("VirtualInputManager"):SendKeyEvent(true, "G", false, uwu)
                        elseif Player.Backpack:FindFirstChild("FishingRod") then
                            game:GetService("VirtualInputManager"):SendKeyEvent(true, "G", false, uwu)
                        end
                        mouse1click()
                        wait(3)
                        Player.PlayerGui.FishingGui.ContainerFrame.ButtonsFrame.ReelButton.Size =
                            UDim2.new(9e9, 9e9, 9e9, 9e9)
                        repeat
                            wait()
                        until Player.Character.FishingRod.Bait.SplashWater.Playing and
                            game:GetService("Players").LocalPlayer.Settings.CurrentFish.Value ~= ""
                        wait()
                        mouse1click()
                        Player.PlayerGui.FishingGui.ContainerFrame.ButtonsFrame.ReelButton.Size = UDim2.new(1, 0, 1, 0)
                        repeat
                            if Pointer.Position.X.Scale <= SafeBar.Position.X.Scale + .01 then
                                mouse1click()
                            end
                            wait()
                        until not Player.PlayerGui.FishingGui.ContainerFrame.ReelingFrame.Visible
                        wait(1)
                    end
                )
            end
        end
    end
)
end) 
Toggle1:CreateKeybind("F", function(Key)
end)

local Toggle1 = Section1:CreateToggle("Auto Feed Dragon", nil, function(State) 
pcall(function()
feed = State
game:GetService('RunService').Stepped:connect(function()
if feed then
for i,v in pairs(game:GetService('Players').LocalPlayer.Character.Dragons:GetDescendants()) do
if v:FindFirstChild("ID") then
game:GetService("ReplicatedStorage").Remotes.FeedDragonRemote:InvokeServer(v.ID.Value,{["Amount"] = 1,["ItemName"] = list})
end
end
end
end)
end)
end)
local Dropdown1 = Section1:CreateDropdown("Select Food")
Dropdown1:AddToolTip("Select Food")
for i,v in next,list do
Dropdown1:AddOption(v, function(String)
list = String
end)
end
local Toggle1 = Section1:CreateToggle("Auto Invis", nil, function(State)
ssyes = State
Invis()
game.Players.LocalPlayer.CharacterAdded:Connect(function()
if ssyes then
Invis() end end)
if not ssyes then
game:GetService('Players').LocalPlayer.Character.UpperTorso:Destroy()
end
end)
local Label1 = Section1:CreateLabel("World Teleports")
local Button1 = Section1:CreateButton("Lobby", function()
game:GetService("TeleportService"):Teleport(3475397644, LocalPlayer) end)

local Button1 = Section1:CreateButton("Accessory", function()
game:GetService("TeleportService"):Teleport(5391312853, LocalPlayer) end)

local Button1 = Section1:CreateButton("Leisure", function()
game:GetService("TeleportService"):Teleport(4601778915, LocalPlayer) end)
local Button1 = Section1:CreateButton("GrassLands", function()

game:GetService("TeleportService"):Teleport(3475419198, LocalPlayer) end)
local Button1 = Section1:CreateButton("Jungle", function()

game:GetService("TeleportService"):Teleport(3475422608, LocalPlayer) end)

local Button1 = Section1:CreateButton("Valcano", function()
game:GetService("TeleportService"):Teleport(3487210751, LocalPlayer) end)

local Button1 = Section1:CreateButton("Tundra", function()
game:GetService("TeleportService"):Teleport(3623549100, LocalPlayer) end)

local Button1 = Section1:CreateButton("Ocean", function()
game:GetService("TeleportService"):Teleport(3737848045, LocalPlayer) end)

local Button1 = Section1:CreateButton("Desert", function()
game:GetService("TeleportService"):Teleport(3752680052, LocalPlayer) end)

local Button1 = Section1:CreateButton("Fantasy", function()
game:GetService("TeleportService"):Teleport(4174118306, LocalPlayer) end)

local Button1 = Section1:CreateButton("WasteLands", function()
game:GetService("TeleportService"):Teleport(4728805070, LocalPlayer) end)

local Button1 = Section1:CreateButton("Prehistoric", function()
game:GetService("TeleportService"):Teleport(4869039553, LocalPlayer) end)



local TextBox1 = SectionA:CreateTextBox("WalkSpeed", "Only numbers", true, function(Value)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
end)
local TextBox1 = SectionA:CreateTextBox("JumpPower", "Only numbers", true, function(Value)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
end)
local Toggle1 = SectionA:CreateToggle("Infinite Jump", nil, function(State)
Infinite = State
game:GetService("UserInputService").JumpRequest:connect(function()
	if Infinite then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end) end)

local Toggle1 = SectionA:CreateToggle("G Noclip", nil, function(State)
sex = State
noclip = false
game:GetService('RunService').Stepped:connect(function()
if noclip then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)

if key == "g" then
if sex then
noclip = not noclip
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end end 
end) end)
local Toggle1 = SectionA:CreateToggle("B Fly", nil, function(State)
sex2 = State
local gogo1000 = 0
local LP = game:service('Players').LocalPlayer
local MOUSE = LP:GetMouse()
MOUSE.KeyDown:connect(function(KEY)
if KEY:lower() == 'b' then
if sex2 then
local LP = game:service('Players').LocalPlayer
local MOUSE = LP:GetMouse()
gogo1000 = gogo1000 + 1
_G.FLYING = false
local T = LP.Character.UpperTorso
local CONTROL = {F = 0, B = 0, L = 0, R = 0}
local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
local SPEED = 5
local function FLY()
_G.FLYING = true
local BG = Instance.new('BodyGyro', T)
local BV = Instance.new('BodyVelocity', T)
BG.P = 9e4
BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
BG.cframe = T.CFrame
BV.velocity = Vector3.new(0, 0.1, 0)
BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
spawn(function()
repeat wait()
LP.Character.Humanoid.PlatformStand = true
if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
SPEED = 200
elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
SPEED = 0
end
if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
else
BV.velocity = Vector3.new(0, 0.1, 0)
end
BG.cframe = game.Workspace.CurrentCamera.CoordinateFrame
until not _G.FLYING
CONTROL = {F = 0, B = 0, L = 0, R = 0}
lCONTROL = {F = 0, B = 0, L = 0, R = 0}
SPEED = 0
BG:destroy()
BV:destroy()
LP.Character.Humanoid.PlatformStand = false
end)
end
MOUSE.KeyDown:connect(function(KEY)
if KEY:lower() == 'w' then
CONTROL.F = 1
elseif KEY:lower() == 's' then
CONTROL.B = -1
elseif KEY:lower() == 'a' then
CONTROL.L = -1 
elseif KEY:lower() == 'd' then 
CONTROL.R = 1
end
end)
MOUSE.KeyUp:connect(function(KEY)
if KEY:lower() == 'w' then
CONTROL.F = 0
elseif KEY:lower() == 's' then
CONTROL.B = 0
elseif KEY:lower() == 'a' then
CONTROL.L = 0
elseif KEY:lower() == 'd' then
CONTROL.R = 0
end
end)
FLY()
if gogo1000 == 2 then
_G.FLYING = false
gogo1000 = 0
end
end
end
end) end)
local Button1 = SectionA:CreateButton("Anti Lag", function()
for _,v in pairs(game:GetService("Workspace"):GetDescendants()) do
if v:IsA("BasePart") and not v.Parent:FindFirstChild("Humanoid") then --- i stole this from the actual game LOL >-<
v.Material = Enum.Material.SmoothPlastic;
if v:IsA("Texture") then
v:Destroy();
end end;		
end;
end)

local Button1 = SectionA:CreateButton("Teleport to RandomPlayer", function()
local randomPlayer = game.Players:GetPlayers()
[math.random(1,#game.Players:GetPlayers())]

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(randomPlayer.Character.Head.Position.X, randomPlayer.Character.Head.Position.Y, randomPlayer.Character.Head.Position.Z)) end)
local Button1 = SectionA:CreateButton("Lag Switch F3", function()
local a = false
local b = settings()

game:service'UserInputService'.InputEnded:connect(function(i)
if i.KeyCode == Enum.KeyCode.F3 then
a = not a
b.Network.IncomingReplicationLag = a and 10 or 0
end
end) end) 
local Button1 = SectionA:CreateButton("ServerHop", function()
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport()
end)
local Button1 = SectionA:CreateButton("Rejoin", function()
game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer) end)

local Toggle3 = Section3:CreateToggle("UI Toggle", nil, function(State)
	Window:Toggle(State)
end)
Toggle3:CreateKeybind(tostring(Config.Keybind):gsub("Enum.KeyCode.", ""), function(Key)
	Config.Keybind = Enum.KeyCode[Key]
end)
Toggle3:SetState(true)
Section3:CreateLabel("Credits DekuDimz#7960")
Section3:CreateLabel("Credits AlexR32#3232 Ui")
local Colorpicker3 = Section3:CreateColorpicker("UI Color", function(Color)
	Window:ChangeColor(Color)
end)
Colorpicker3:UpdateColor(Config.Color)
-- credits to jan for patterns
local Dropdown3 = Section4:CreateDropdown("Image")
local Option7 = Dropdown3:AddOption("Default", function(String)
	Window:SetBackground("2151741365")
end)
local Option8 = Dropdown3:AddOption("Hearts", function(String)
	Window:SetBackground("6073763717")
end)
local Option9 = Dropdown3:AddOption("Abstract", function(String)
	Window:SetBackground("6073743871")
end)
local Option10 = Dropdown3:AddOption("Hexagon", function(String)
	Window:SetBackground("6073628839")
end)
local Option11 = Dropdown3:AddOption("Circles", function(String)
	Window:SetBackground("6071579801")
end)
local Option12 = Dropdown3:AddOption("Lace With Flowers", function(String)
	Window:SetBackground("6071575925")
end)
local Option13 = Dropdown3:AddOption("Floral", function(String)
	Window:SetBackground("5553946656")
end)
Option7:SetOption()

local Colorpicker4 = Section4:CreateColorpicker("Color", function(Color)
	Window:SetBackgroundColor(Color)
end)
Colorpicker4:UpdateColor(Color3.new(1,1,1))

local Slider3 = Section4:CreateSlider("Transparency",0,1,nil,false, function(Value)
	Window:SetBackgroundTransparency(Value)
end)
Slider3:SetValue(0)

local Slider4 = Section4:CreateSlider("Tile Scale",0,1,nil,false, function(Value)
	Window:SetTileScale(Value)
end)
Slider4:SetValue(0.5)
